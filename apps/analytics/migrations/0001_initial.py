# Generated by Django 5.2 on 2025-08-29 11:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RealtimeMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_live_streams', models.IntegerField(default=0)),
                ('current_viewers', models.IntegerField(default=0)),
                ('current_chat_messages_per_minute', models.IntegerField(default=0)),
                ('cpu_usage', models.FloatField(default=0)),
                ('memory_usage', models.FloatField(default=0)),
                ('disk_usage', models.FloatField(default=0)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PopularContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('stream', 'ライブ配信'), ('video', 'VOD')], max_length=10)),
                ('content_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('score', models.FloatField(default=0)),
                ('views_24h', models.IntegerField(default=0)),
                ('views_7d', models.IntegerField(default=0)),
                ('engagement_rate', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-score'],
                'unique_together': {('content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='StreamAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_id', models.CharField(db_index=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('concurrent_viewers', models.IntegerField(default=0)),
                ('total_views', models.IntegerField(default=0)),
                ('unique_viewers', models.IntegerField(default=0)),
                ('chat_messages', models.IntegerField(default=0)),
                ('reactions', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['stream_id', '-timestamp'], name='analytics_s_stream__474498_idx')],
            },
        ),
        migrations.CreateModel(
            name='TenantAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('total_streams', models.IntegerField(default=0)),
                ('live_streams', models.IntegerField(default=0)),
                ('total_videos', models.IntegerField(default=0)),
                ('new_videos', models.IntegerField(default=0)),
                ('total_views', models.IntegerField(default=0)),
                ('total_watch_time', models.IntegerField(default=0)),
                ('chat_messages', models.IntegerField(default=0)),
                ('storage_used', models.BigIntegerField(default=0)),
                ('bandwidth_used', models.BigIntegerField(default=0)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('tenant_name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='VideoAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(db_index=True, max_length=100)),
                ('date', models.DateField()),
                ('views', models.IntegerField(default=0)),
                ('unique_viewers', models.IntegerField(default=0)),
                ('total_watch_time', models.IntegerField(default=0)),
                ('average_watch_time', models.FloatField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('video_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('streams_created', models.IntegerField(default=0)),
                ('videos_uploaded', models.IntegerField(default=0)),
                ('total_streaming_time', models.IntegerField(default=0)),
                ('videos_watched', models.IntegerField(default=0)),
                ('total_watch_time', models.IntegerField(default=0)),
                ('streams_joined', models.IntegerField(default=0)),
                ('chat_messages_sent', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
